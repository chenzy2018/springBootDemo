server:
  port: 8861
spring:
  application:
    name: content-center
  cloud:
    nacos:
      username: nacos
      password: nacos
      discovery:
        enabled: true
        register-enabled: true
        server-addr: 127.0.0.1:8848
        cluster-name: BJ
    sentinel:
      #filter:
        #关闭对 springMVC 端点的保护， 防止干扰
        #enabled: false
      transport:
        # 指定sentinel控制台地址
        dashboard: localhost:8080
        # 指定和控制台通信的IP，若不配置，会自动选择一个IP注册
        #client-ip: 127.0.0.1
        # 指定和控制台通信的端口，默认值8719
        # 若不配置，会自动扫猫从8719开始扫猫，依次+1，直到找到未被占用的端口
        #port: 8719
        # 心跳发送周期，默认值null
        # 但在SimpleHttpHeartbeatSender会用默认值10秒
        #heartbeat-interval-ms: 10000
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:9876
      bindings:
        input:
          # 用来指定topic
          destination: stream-test-topic
          # rockermq一定要设置，随便写即可，其他mq可以留空
          group: binder-group


  datasource:
    password: root2018
    username: root
    url: jdbc:mysql://localhost:3306/content-center?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver

#配置某服务的负载均衡的规则
#user-center:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.itczy.org.ribbonConfiguration.TestNacosWeightRule

# RestTemplate的senetinel开关，用于开启或关闭@SentinelRestTemplate，默认开启
resttemplate:
  sentinel:
    enabled: false

# feign的senetinel开关，用于开启或关闭@SentinelRestTemplate，默认开启
feign:
  sentinel:
    enabled: false
  # 替代代码配置日志级别方式
  client:
    config:
      # 指定具体某一个微服务的名称，如果使用default，就表示全局(所有微服务)都使用此配置
      content-center:
          loggerLevel: full

#rocketmq服务
rocketmq:
  name-server: 127.0.01:9876
  producer:
    #小坑，必须指定group
    group: test-group

logging:
  level:
    com.itczy.org.feignClient.TestUserCenterFeignClient: debug
    # 由于stream的一个架包会导致控制台一直打印nacos心跳的日志，因此可以通过设定nacos的日志级别来不打印
    com.alibaba.nacos: error